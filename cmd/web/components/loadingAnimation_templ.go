// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func LoadingAnimation() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"voice-generation-loading\" class=\"voice-loading-indicator\" x-data=\"loadingProgress()\" x-init=\"init()\"><div class=\"flex fixed inset-0 z-50 justify-center items-center bg-black bg-opacity-60 backdrop-blur-sm\"><div class=\"p-8 mx-4 max-w-sm bg-white rounded-2xl shadow-2xl\" id=\"loading-modal\"><div class=\"text-center\"><!-- Voice Wave Animation --><div class=\"mb-6\"><div class=\"flex justify-center items-end space-x-1 h-16\"><div class=\"w-2 bg-gradient-to-t from-indigo-600 to-purple-600 rounded-full animate-wave-1\" style=\"height: 12px;\"></div><div class=\"w-2 bg-gradient-to-t from-indigo-600 to-purple-600 rounded-full animate-wave-2\" style=\"height: 24px;\"></div><div class=\"w-2 bg-gradient-to-t from-indigo-600 to-purple-600 rounded-full animate-wave-3\" style=\"height: 36px;\"></div><div class=\"w-2 bg-gradient-to-t from-indigo-600 to-purple-600 rounded-full animate-wave-4\" style=\"height: 18px;\"></div><div class=\"w-2 bg-gradient-to-t from-indigo-600 to-purple-600 rounded-full animate-wave-5\" style=\"height: 48px;\"></div><div class=\"w-2 bg-gradient-to-t from-indigo-600 to-purple-600 rounded-full animate-wave-6\" style=\"height: 30px;\"></div><div class=\"w-2 bg-gradient-to-t from-indigo-600 to-purple-600 rounded-full animate-wave-7\" style=\"height: 24px;\"></div><div class=\"w-2 bg-gradient-to-t from-indigo-600 to-purple-600 rounded-full animate-wave-8\" style=\"height: 12px;\"></div></div></div><!-- Loading Text --><h3 class=\"mb-2 text-xl font-bold text-gray-900\">Cloning Your Voice</h3><p class=\"mb-4 text-gray-600\">AI is analyzing and generating speech...</p><!-- Progress Steps --><div class=\"mb-6 space-y-2 text-left\"><div class=\"flex items-center space-x-3\"><div class=\"flex flex-shrink-0 justify-center items-center w-4 h-4 rounded-full transition-all duration-300\" :class=\"currentStep >= 1 ? 'bg-green-500' : 'border-2 border-gray-300'\"><svg x-show=\"currentStep >= 1\" class=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path></svg><div x-show=\"currentStep === 1\" class=\"w-full h-full bg-indigo-600 rounded-full animate-ping\"></div></div><span class=\"text-sm transition-colors duration-300\" :class=\"currentStep >= 1 ? 'text-gray-700' : 'text-gray-400'\">Processing audio input</span></div><div class=\"flex items-center space-x-3\"><div class=\"flex flex-shrink-0 justify-center items-center w-4 h-4 rounded-full transition-all duration-300\" :class=\"currentStep >= 2 ? 'bg-green-500' : 'border-2 border-gray-300'\"><svg x-show=\"currentStep >= 3\" class=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path></svg><div x-show=\"currentStep === 2\" class=\"w-full h-full bg-indigo-600 rounded-full animate-ping\"></div></div><span class=\"text-sm transition-colors duration-300\" :class=\"currentStep >= 2 ? 'text-gray-700' : 'text-gray-400'\">Analyzing voice patterns</span></div><div class=\"flex items-center space-x-3\"><div class=\"flex flex-shrink-0 justify-center items-center w-4 h-4 rounded-full transition-all duration-300\" :class=\"currentStep >= 3 ? 'bg-green-500' : 'border-2 border-gray-300'\"><svg x-show=\"currentStep >= 4\" class=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path></svg><div x-show=\"currentStep === 3\" class=\"w-full h-full bg-indigo-600 rounded-full animate-ping\"></div></div><span class=\"text-sm transition-colors duration-300\" :class=\"currentStep >= 3 ? 'text-gray-700' : 'text-gray-400'\">Generating speech</span></div></div><!-- Progress Bar --><div class=\"w-full h-2 bg-gray-200 rounded-full\"><div class=\"h-2 bg-gradient-to-r from-indigo-600 to-purple-600 rounded-full transition-all duration-500\" :style=\"`width: ${progress}%`\"></div></div><div class=\"flex justify-between items-center mt-2\"><p class=\"text-xs text-gray-500\">Estimated time: <span x-text=\"timeRemaining\"></span></p><p class=\"text-xs text-gray-600\" x-text=\"`${Math.round(progress)}%`\"></p></div></div></div></div></div><style>\n\t\t/* Voice loading indicator styles */\n\t\t#voice-generation-loading {\n\t\t\topacity: 0;\n\t\t\tpointer-events: none;\n\t\t\ttransition: opacity 500ms ease-in;\n\t\t}\n\t\t#voice-generation-loading.htmx-request {\n\t\t\topacity: 1;\n\t\t\tpointer-events: auto;\n\t\t}\n\n\t\t@keyframes wave-1 {\n\t\t\t0%, 100% { height: 12px; }\n\t\t\t50% { height: 32px; }\n\t\t}\n\t\t@keyframes wave-2 {\n\t\t\t0%, 100% { height: 24px; }\n\t\t\t50% { height: 48px; }\n\t\t}\n\t\t@keyframes wave-3 {\n\t\t\t0%, 100% { height: 36px; }\n\t\t\t50% { height: 60px; }\n\t\t}\n\t\t@keyframes wave-4 {\n\t\t\t0%, 100% { height: 18px; }\n\t\t\t50% { height: 42px; }\n\t\t}\n\t\t@keyframes wave-5 {\n\t\t\t0%, 100% { height: 48px; }\n\t\t\t50% { height: 64px; }\n\t\t}\n\t\t@keyframes wave-6 {\n\t\t\t0%, 100% { height: 30px; }\n\t\t\t50% { height: 54px; }\n\t\t}\n\t\t@keyframes wave-7 {\n\t\t\t0%, 100% { height: 24px; }\n\t\t\t50% { height: 48px; }\n\t\t}\n\t\t@keyframes wave-8 {\n\t\t\t0%, 100% { height: 12px; }\n\t\t\t50% { height: 32px; }\n\t\t}\n\n\t\t.animate-wave-1 { animation: wave-1 1.2s ease-in-out infinite; }\n\t\t.animate-wave-2 { animation: wave-2 1.2s ease-in-out infinite 0.1s; }\n\t\t.animate-wave-3 { animation: wave-3 1.2s ease-in-out infinite 0.2s; }\n\t\t.animate-wave-4 { animation: wave-4 1.2s ease-in-out infinite 0.3s; }\n\t\t.animate-wave-5 { animation: wave-5 1.2s ease-in-out infinite 0.4s; }\n\t\t.animate-wave-6 { animation: wave-6 1.2s ease-in-out infinite 0.5s; }\n\t\t.animate-wave-7 { animation: wave-7 1.2s ease-in-out infinite 0.6s; }\n\t\t.animate-wave-8 { animation: wave-8 1.2s ease-in-out infinite 0.7s; }\n\t</style><script>\n\t\tfunction loadingProgress() {\n\t\t\treturn {\n\t\t\t\tprogress: 0,\n\t\t\t\tcurrentStep: 0,\n\t\t\t\ttimeRemaining: '20-30 seconds',\n\t\t\t\testimatedDuration: 25000, // 25 seconds baseline\n\t\t\t\tstartTime: null,\n\t\t\t\tprogressInterval: null,\n\n\t\t\t\tinit() {\n\t\t\t\t\t// Listen for when this element gets the htmx-request class\n\t\t\t\t\tconst observer = new MutationObserver((mutations) => {\n\t\t\t\t\t\tmutations.forEach((mutation) => {\n\t\t\t\t\t\t\tif (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n\t\t\t\t\t\t\t\tconst target = mutation.target;\n\t\t\t\t\t\t\t\tif (target.classList.contains('htmx-request')) {\n\t\t\t\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\t\t\t\tthis.startProgress();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.stopProgress();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tobserver.observe(this.$el, { attributes: true });\n\t\t\t\t},\n\n\t\t\t\treset() {\n\t\t\t\t\t// Clear any existing interval\n\t\t\t\t\tif (this.progressInterval) {\n\t\t\t\t\t\tclearInterval(this.progressInterval);\n\t\t\t\t\t\tthis.progressInterval = null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Reset all progress variables\n\t\t\t\t\tthis.progress = 0;\n\t\t\t\t\tthis.currentStep = 0;\n\t\t\t\t\tthis.timeRemaining = '20-30 seconds';\n\t\t\t\t\tthis.startTime = null;\n\t\t\t\t},\n\n\t\t\t\tstartProgress() {\n\t\t\t\t\tthis.startTime = Date.now();\n\t\t\t\t\tthis.progress = 5;\n\t\t\t\t\tthis.currentStep = 1;\n\t\t\t\t\tthis.timeRemaining = '20-30 seconds';\n\t\t\t\t\t\n\t\t\t\t\t// Start the progress animation\n\t\t\t\t\tthis.progressInterval = setInterval(() => {\n\t\t\t\t\t\tthis.updateProgress();\n\t\t\t\t\t}, 200);\n\t\t\t\t},\n\n\t\t\t\tstopProgress() {\n\t\t\t\t\tif (this.progressInterval) {\n\t\t\t\t\t\tclearInterval(this.progressInterval);\n\t\t\t\t\t\tthis.progressInterval = null;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tupdateProgress() {\n\t\t\t\t\tconst elapsed = Date.now() - this.startTime;\n\t\t\t\t\tconst progressRatio = elapsed / this.estimatedDuration;\n\t\t\t\t\t\n\t\t\t\t\t// Ease-out curve for more realistic progress\n\t\t\t\t\tthis.progress = Math.min(95, 5 + (90 * this.easeOut(progressRatio)));\n\t\t\t\t\t\n\t\t\t\t\t// Update steps based on progress\n\t\t\t\t\tif (this.progress >= 25 && this.currentStep < 2) {\n\t\t\t\t\t\tthis.currentStep = 2;\n\t\t\t\t\t} else if (this.progress >= 65 && this.currentStep < 3) {\n\t\t\t\t\t\tthis.currentStep = 3;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Update time remaining\n\t\t\t\t\tthis.updateTimeRemaining(elapsed);\n\t\t\t\t\t\n\t\t\t\t\t// Stop at 95% to wait for actual completion\n\t\t\t\t\tif (this.progress >= 95) {\n\t\t\t\t\t\tclearInterval(this.progressInterval);\n\t\t\t\t\t\tthis.timeRemaining = 'Almost done...';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tupdateTimeRemaining(elapsed) {\n\t\t\t\t\tconst remainingMs = Math.max(0, this.estimatedDuration - elapsed);\n\t\t\t\t\tconst remainingSeconds = Math.ceil(remainingMs / 1000);\n\t\t\t\t\t\n\t\t\t\t\tif (remainingSeconds > 15) {\n\t\t\t\t\t\tthis.timeRemaining = '15-30 seconds';\n\t\t\t\t\t} else if (remainingSeconds > 10) {\n\t\t\t\t\t\tthis.timeRemaining = '10-15 seconds';\n\t\t\t\t\t} else if (remainingSeconds > 5) {\n\t\t\t\t\t\tthis.timeRemaining = '5-10 seconds';\n\t\t\t\t\t} else if (remainingSeconds > 0) {\n\t\t\t\t\t\tthis.timeRemaining = 'A few seconds...';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.timeRemaining = 'Almost done...';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\teaseOut(t) {\n\t\t\t\t\t// Cubic ease-out for natural progress feel\n\t\t\t\t\treturn 1 - Math.pow(1 - t, 3);\n\t\t\t\t},\n\n\t\t\t\t// Clean up interval when component is destroyed\n\t\t\t\tdestroy() {\n\t\t\t\t\tif (this.progressInterval) {\n\t\t\t\t\t\tclearInterval(this.progressInterval);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
