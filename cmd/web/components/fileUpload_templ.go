// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func FileUpload() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"file-upload\" class=\"mt-4\"><label class=\"block pl-4 text-sm font-bold leading-6 text-gray-900 mb-2\">Upload Audio File</label><div class=\"mt-2\"><div id=\"drop-zone\" class=\"relative flex justify-center rounded-lg border border-dashed border-gray-300 px-6 py-10 hover:border-indigo-400 transition-colors duration-200\"><div class=\"text-center\"><svg class=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\"><path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg><div class=\"mt-4 flex text-sm leading-6 text-gray-600\"><label for=\"file-upload-input\" class=\"relative cursor-pointer rounded-md bg-white font-semibold text-indigo-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 hover:text-indigo-500\"><span>Upload a file</span> <input id=\"file-upload-input\" name=\"audio-file\" type=\"file\" class=\"sr-only\" accept=\"audio/*,.mp3,.wav,.m4a,.ogg,.flac\" onchange=\"handleFileSelect(this)\"></label><p class=\"pl-1\">or drag and drop</p></div><p class=\"text-xs leading-5 text-gray-600\">MP3, WAV, M4A, OGG, FLAC up to 50MB</p></div></div></div><!-- File Preview Area --><div id=\"file-preview\" class=\"hidden mt-4 p-4 bg-gray-50 border border-gray-200 rounded-lg\"><div class=\"flex items-center justify-between\"><div class=\"flex items-center space-x-3\"><div class=\"flex-shrink-0\"><svg class=\"h-8 w-8 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\"></path></svg></div><div class=\"min-w-0 flex-1\"><p class=\"text-sm font-medium text-gray-900\" id=\"file-name\">File name</p><p class=\"text-sm text-gray-500\" id=\"file-size\">Size</p></div><div class=\"flex-shrink-0\"><button type=\"button\" onclick=\"removeFile()\" class=\"rounded-md bg-white text-sm font-medium text-gray-700 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500\"><svg class=\"h-5 w-5 text-gray-400 hover:text-gray-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg></button></div></div></div><!-- Audio Player Preview --><div class=\"mt-3\"><audio id=\"audio-preview\" controls class=\"w-full h-8\"><source id=\"audio-source\" src=\"\" type=\"\"> Your browser does not support the audio element.</audio></div></div><!-- Upload Progress --><div id=\"upload-progress\" class=\"hidden mt-4\"><div class=\"flex items-center justify-between text-sm text-gray-600 mb-1\"><span>Uploading...</span> <span id=\"progress-percent\">0%</span></div><div class=\"w-full bg-gray-200 rounded-full h-2\"><div id=\"progress-bar\" class=\"bg-indigo-600 h-2 rounded-full transition-all duration-300\" style=\"width: 0%\"></div></div></div><!-- Error Message --><div id=\"file-error\" class=\"hidden mt-4 p-3 bg-red-50 border border-red-200 rounded-md\"><div class=\"flex items-center\"><svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\"></path></svg> <span class=\"text-red-800 text-sm font-medium\" id=\"error-message\">Error message</span></div></div></div><script>\n\t\tlet selectedFile = null;\n\n\t\tfunction handleFileSelect(input) {\n\t\t\tconst file = input.files[0];\n\t\t\tif (!file) return;\n\n\t\t\t// Validate file\n\t\t\tif (!validateFile(file)) return;\n\n\t\t\tselectedFile = file;\n\t\t\tshowFilePreview(file);\n\t\t\thideError();\n\t\t\tnotifyValidationSystem();\n\t\t}\n\n\t\tfunction validateFile(file) {\n\t\t\t// Check file size (50MB max)\n\t\t\tconst maxSize = 50 * 1024 * 1024; // 50MB\n\t\t\tif (file.size > maxSize) {\n\t\t\t\tshowError('File size must be less than 50MB');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Check file type\n\t\t\tconst allowedTypes = ['audio/mpeg', 'audio/wav', 'audio/mp4', 'audio/ogg', 'audio/flac', 'audio/x-m4a'];\n\t\t\tconst allowedExtensions = ['.mp3', '.wav', '.m4a', '.ogg', '.flac'];\n\t\t\t\n\t\t\tconst isValidType = allowedTypes.includes(file.type);\n\t\t\tconst hasValidExtension = allowedExtensions.some(ext => file.name.toLowerCase().endsWith(ext));\n\n\t\t\tif (!isValidType && !hasValidExtension) {\n\t\t\t\tshowError('Please select a valid audio file (MP3, WAV, M4A, OGG, or FLAC)');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfunction showFilePreview(file) {\n\t\t\tconst preview = document.getElementById('file-preview');\n\t\t\tconst fileName = document.getElementById('file-name');\n\t\t\tconst fileSize = document.getElementById('file-size');\n\t\t\tconst audioPreview = document.getElementById('audio-preview');\n\t\t\tconst audioSource = document.getElementById('audio-source');\n\n\t\t\tfileName.textContent = file.name;\n\t\t\tfileSize.textContent = formatFileSize(file.size);\n\t\t\t\n\t\t\t// Create object URL for audio preview\n\t\t\tconst url = URL.createObjectURL(file);\n\t\t\taudioSource.src = url;\n\t\t\taudioSource.type = file.type;\n\t\t\taudioPreview.load();\n\n\t\t\tpreview.classList.remove('hidden');\n\t\t}\n\n\t\tfunction removeFile() {\n\t\t\tselectedFile = null;\n\t\t\tdocument.getElementById('file-upload-input').value = '';\n\t\t\tdocument.getElementById('file-preview').classList.add('hidden');\n\t\t\t\n\t\t\t// Revoke object URL to free memory\n\t\t\tconst audioSource = document.getElementById('audio-source');\n\t\t\tif (audioSource.src) {\n\t\t\t\tURL.revokeObjectURL(audioSource.src);\n\t\t\t\taudioSource.src = '';\n\t\t\t}\n\t\t\tnotifyValidationSystem();\n\t\t}\n\n\t\tfunction formatFileSize(bytes) {\n\t\t\tif (bytes === 0) return '0 Bytes';\n\t\t\tconst k = 1024;\n\t\t\tconst sizes = ['Bytes', 'KB', 'MB', 'GB'];\n\t\t\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\n\t\t\treturn parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n\t\t}\n\n\t\tfunction showError(message) {\n\t\t\tconst errorDiv = document.getElementById('file-error');\n\t\t\tconst errorMessage = document.getElementById('error-message');\n\t\t\terrorMessage.textContent = message;\n\t\t\terrorDiv.classList.remove('hidden');\n\t\t}\n\n\t\tfunction hideError() {\n\t\t\tdocument.getElementById('file-error').classList.add('hidden');\n\t\t}\n\n\t\t// Drag and drop functionality\n\t\tconst dropZone = document.getElementById('drop-zone');\n\n\t\tdropZone.addEventListener('dragover', function(e) {\n\t\t\te.preventDefault();\n\t\t\tthis.classList.add('border-indigo-400', 'bg-indigo-50');\n\t\t});\n\n\t\tdropZone.addEventListener('dragleave', function(e) {\n\t\t\te.preventDefault();\n\t\t\tthis.classList.remove('border-indigo-400', 'bg-indigo-50');\n\t\t});\n\n\t\tdropZone.addEventListener('drop', function(e) {\n\t\t\te.preventDefault();\n\t\t\tthis.classList.remove('border-indigo-400', 'bg-indigo-50');\n\t\t\t\n\t\t\tconst files = e.dataTransfer.files;\n\t\t\tif (files.length > 0) {\n\t\t\t\tconst file = files[0];\n\t\t\t\tif (validateFile(file)) {\n\t\t\t\t\tselectedFile = file;\n\t\t\t\t\tshowFilePreview(file);\n\t\t\t\t\thideError();\n\t\t\t\t\tnotifyValidationSystem();\n\t\t\t\t\t// Also update the input\n\t\t\t\t\tconst input = document.getElementById('file-upload-input');\n\t\t\t\t\t// Note: We can't directly set input.files, but we store the file in selectedFile\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Expose selectedFile for form submission\n\t\twindow.getSelectedAudioFile = function() {\n\t\t\treturn selectedFile;\n\t\t};\n\n\t\t// Notify validation system when file state changes\n\t\tfunction notifyValidationSystem() {\n\t\t\t// Check if we have a valid file\n\t\t\tconst isValid = selectedFile !== null;\n\t\t\t\n\t\t\t// Update Alpine.js store validation state\n\t\t\tif (typeof Alpine !== 'undefined' && Alpine.store('voiceClone')) {\n\t\t\t\tAlpine.store('voiceClone').validateAudioInput(isValid);\n\t\t\t}\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
