// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func AudioInputModeSelector() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"audio-input-mode-selector\" class=\"mb-8\"><div class=\"mb-6 text-center\"><h2 class=\"mb-2 text-xl font-semibold text-gray-900\">Choose Audio Source</h2><p class=\"text-sm text-gray-600\">Select how you want to provide the voice to clone</p></div><div class=\"grid grid-cols-1 gap-4 sm:grid-cols-3\"><!-- URL Mode --><div class=\"audio-mode-card\" data-mode=\"url\"><div class=\"relative p-6 h-full bg-white rounded-xl border border-gray-200 shadow-sm transition-all duration-200 cursor-pointer hover:shadow-md hover:bg-gray-50 hover:border-indigo-300\"><div class=\"flex flex-col items-center h-full text-center\"><div class=\"flex flex-col flex-1 justify-center items-center\"><div class=\"flex justify-center items-center mb-4 w-12 h-12 text-white bg-gradient-to-br from-red-500 to-pink-500 rounded-lg shadow-sm\"><svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"></path></svg></div><h3 class=\"mb-2 text-lg font-semibold text-gray-900\">Video URL</h3><p class=\"mb-4 text-sm text-gray-500\">YouTube, TikTok, Instagram</p></div><div class=\"flex items-center space-x-2 text-xs text-gray-400\"><svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path></svg> <span>Best quality</span></div></div><input type=\"radio\" name=\"audio-mode\" value=\"url\" class=\"sr-only\" checked></div></div><!-- File Upload Mode --><div class=\"audio-mode-card\" data-mode=\"file\"><div class=\"relative p-6 h-full bg-white rounded-xl border border-gray-200 shadow-sm transition-all duration-200 cursor-pointer hover:shadow-md hover:bg-gray-50 hover:border-indigo-300\"><div class=\"flex flex-col items-center h-full text-center\"><div class=\"flex flex-col flex-1 justify-center items-center\"><div class=\"flex justify-center items-center mb-4 w-12 h-12 text-white bg-gradient-to-br from-blue-500 to-cyan-500 rounded-lg shadow-sm\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path></svg></div><h3 class=\"mb-2 text-lg font-semibold text-gray-900\">Upload File</h3><p class=\"mb-4 text-sm text-gray-500\">MP3, WAV, M4A files</p></div><div class=\"flex items-center space-x-2 text-xs text-gray-400\"><svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path></svg> <span>Private & secure</span></div></div><input type=\"radio\" name=\"audio-mode\" value=\"file\" class=\"sr-only\"></div></div><!-- Microphone Mode --><div class=\"audio-mode-card\" data-mode=\"microphone\"><div class=\"relative p-6 h-full bg-white rounded-xl border border-gray-200 shadow-sm transition-all duration-200 cursor-pointer hover:shadow-md hover:bg-gray-50 hover:border-indigo-300\"><div class=\"flex flex-col items-center h-full text-center\"><div class=\"flex flex-col flex-1 justify-center items-center\"><div class=\"flex justify-center items-center mb-4 w-12 h-12 text-white bg-gradient-to-br from-green-500 to-emerald-500 rounded-lg shadow-sm\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"></path></svg></div><h3 class=\"mb-2 text-lg font-semibold text-gray-900\">Record Audio</h3><p class=\"mb-4 text-sm text-gray-500\">Use your microphone</p></div><div class=\"flex items-center space-x-2 text-xs text-gray-400\"><svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\"></path></svg> <span>Real-time</span></div></div><input type=\"radio\" name=\"audio-mode\" value=\"microphone\" class=\"sr-only\"></div></div></div></div><script>\n\t\t// Alpine.js integration with HTMX-compatible approach\n\t\tdocument.addEventListener('alpine:init', () => {\n\t\t\t// Initialize Alpine store if not already done\n\t\t\tif (!Alpine.store('voiceClone')) {\n\t\t\t\tAlpine.store('voiceClone', {\n\t\t\t\t\taudioMode: 'url',\n\t\t\t\t\ttextValid: false,\n\t\t\t\t\taudioInputValid: false,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tget isFormValid() { return this.textValid && this.audioInputValid; },\n\t\t\t\t\tsetAudioMode(mode) { this.audioMode = mode; this.audioInputValid = false; },\n\t\t\t\t\tvalidateText(text) { this.textValid = text.length > 0 && text.length <= 500; },\n\t\t\t\t\tvalidateAudioInput(isValid) { this.audioInputValid = isValid; },\n\t\t\t\t\tstartLoading() { this.isLoading = true; },\n\t\t\t\t\tstopLoading() { this.isLoading = false; }\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Initialize the mode selector with Alpine behavior\n\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\tconst selector = document.getElementById('audio-input-mode-selector');\n\t\t\tif (selector && typeof Alpine !== 'undefined') {\n\t\t\t\t// Set up Alpine data\n\t\t\t\tselector.setAttribute('x-data', '{}');\n\t\t\t\tselector.setAttribute('x-init', '$store.voiceClone.setAudioMode(\"url\")');\n\t\t\t\t\n\t\t\t\t// Set up click handlers and reactive classes\n\t\t\t\tconst cards = selector.querySelectorAll('.audio-mode-card');\n\t\t\t\tcards.forEach(card => {\n\t\t\t\t\tconst mode = card.dataset.mode;\n\t\t\t\t\tconst cardElement = card.querySelector('.relative');\n\t\t\t\t\tconst radio = card.querySelector('input[type=\"radio\"]');\n\t\t\t\t\t\n\t\t\t\t\t// Set up Alpine attributes\n\t\t\t\t\tcard.setAttribute('x-on:click', `$store.voiceClone.setAudioMode('${mode}'); htmx.ajax('POST', '/validate-url', {target: '#audio-input-container'})`);\n\t\t\t\t\tcardElement.setAttribute('x-bind:class', `$store.voiceClone.audioMode === '${mode}' ? 'border-indigo-500 bg-indigo-50 ring-2 ring-indigo-500' : 'border-gray-200 bg-white hover:border-indigo-300 hover:bg-gray-50'`);\n\t\t\t\t\tradio.setAttribute('x-bind:checked', `$store.voiceClone.audioMode === '${mode}'`);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Initialize Alpine on this element\n\t\t\t\tAlpine.initTree(selector);\n\t\t\t}\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
